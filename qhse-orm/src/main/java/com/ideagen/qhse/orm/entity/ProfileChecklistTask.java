package com.ideagen.qhse.orm.entity;

import java.sql.Date;
import java.util.Collection;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;


/**
 * ProfileChecklistTask generated by hbm2java
 */
@Entity
@Table(name = "profile_checklist_task")
public class ProfileChecklistTask extends AbstractNamedEntity {

	private ProfileChecklistTask profileChecklistTask;
	private Site site;
	private String type;
	private String status;
	private Date creationDate;
	private Date targetCompletionDate;
	private User responsibleUser;
	private Boolean achieved;
	private long profileId;
	private long checklistId;
	private User completedByUser;
	private String completionComment;
	private Date completionDate;
	private String additionalInformation;
	private String priority;
	private Long responsibleDepartment;
	//TODO
	private Set<RiskBusinessArea> businessAreas = new HashSet<RiskBusinessArea>();;
	//private Set<ProfileChecklistTask> profileChecklistTasks = new HashSet<ProfileChecklistTask>(0);

	public ProfileChecklistTask() {
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "parent_task_id")
	public ProfileChecklistTask getProfileChecklistTask() {
		return this.profileChecklistTask;
	}

	public void setProfileChecklistTask(ProfileChecklistTask profileChecklistTask) {
		this.profileChecklistTask = profileChecklistTask;
	}
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "site", nullable = false)
	public Site getSite() {
		return this.site;
	}

	public void setSite(Site site) {
		this.site = site;
	}
	
	@Column(name = "type", nullable = false, length = 2)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}
	
	@Column(name = "status", nullable = false, length = 8)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}
	
	@Column(name = "creation_date", nullable = false, length = 10)
	public Date getCreationDate() {
		return this.creationDate;
	}

	public void setCreationDate(Date creationDate) {
		this.creationDate = creationDate;
	}
	
	@Column(name = "target_completion_date", nullable = false, length = 10)
	public Date getTargetCompletionDate() {
		return this.targetCompletionDate;
	}

	public void setTargetCompletionDate(Date targetCompletionDate) {
		this.targetCompletionDate = targetCompletionDate;
	}
	
	@OneToOne
    @JoinColumn(name = "responsible_user", nullable = false)
	public User getResponsibleUser() {
		return this.responsibleUser;
	}

	public void setResponsibleUser(User responsibleUser) {
		this.responsibleUser = responsibleUser;
	}
	
	@Column(name = "achieved")
	public Boolean getAchieved() {
		return this.achieved;
	}

	public void setAchieved(Boolean achieved) {
		this.achieved = achieved;
	}
	
	@Column(name = "profile_id", nullable = false)
	public long getProfileId() {
		return this.profileId;
	}

	public void setProfileId(long profileId) {
		this.profileId = profileId;
	}
	
	@Column(name = "checklist_id", nullable = false)
	public long getChecklistId() {
		return this.checklistId;
	}

	public void setChecklistId(long checklistId) {
		this.checklistId = checklistId;
	}
	
	@OneToOne
    @JoinColumn(name = "completed_by_user")
	public User getCompletedByUser() {
		return this.completedByUser;
	}

	public void setCompletedByUser(User completedByUser) {
		this.completedByUser = completedByUser;
	}
	
	@Column(name = "completion_comment", length = 16777215)
	public String getCompletionComment() {
		return this.completionComment;
	}

	public void setCompletionComment(String completionComment) {
		this.completionComment = completionComment;
	}
	
	@Column(name = "completion_date", length = 10)
	public Date getCompletionDate() {
		return this.completionDate;
	}

	public void setCompletionDate(Date completionDate) {
		this.completionDate = completionDate;
	}
	
	@Column(name = "additional_information", length = 16777215)
	public String getAdditionalInformation() {
		return this.additionalInformation;
	}

	public void setAdditionalInformation(String additionalInformation) {
		this.additionalInformation = additionalInformation;
	}
	
	@Column(name = "priority", length = 50)
	public String getPriority() {
		return this.priority;
	}

	public void setPriority(String priority) {
		this.priority = priority;
	}
	
	@Column(name = "responsible_department")
	public Long getResponsibleDepartment() {
		return this.responsibleDepartment;
	}

	public void setResponsibleDepartment(Long responsibleDepartment) {
		this.responsibleDepartment = responsibleDepartment;
	}
	
	@ManyToMany(fetch = FetchType.EAGER)
    @JoinTable(
            name = "profile_checklist_task_business_area",
            joinColumns = @JoinColumn(
                    name = "profile_checklist_task_id", referencedColumnName = "id"),
            inverseJoinColumns = @JoinColumn(
                    name = "business_area_id", referencedColumnName = "id"))
	public Set<RiskBusinessArea> getBusinessAreas() {
		return businessAreas;
	}

	public void setBusinessAreas(Set<RiskBusinessArea> businessAreas) {
		this.businessAreas = businessAreas;
	}

	/*
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "profileChecklistTask")
	public Set<ProfileChecklistTask> getProfileChecklistTasks() {
		return this.profileChecklistTasks;
	}

	public void setProfileChecklistTasks(Set<ProfileChecklistTask> profileChecklistTasks) {
		this.profileChecklistTasks = profileChecklistTasks;
	}*/

}
